version: '3'

services:
  postgres-service-container:
    image: postgres:9.4-alpine
    restart: always
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PWD}
      POSTGRES_DB: ${PG_DB}
    ports:
      - "5432"
    volumes:
      - ${PWD}/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - netmsbackend
  java-microservicio:
    image: test01:v01
    environment:
      - PG_USER
      - PG_PWD
      - PG_DB
      - PG_SERVER=postgres-service-container
      - PG_SERVER_PORT=5432
    ports:
      - "3081"
    depends_on:
      - postgres-service-container
    networks:
      - netlbfront
      - netmsbackend
  load-balancer:
    image: nginx-lb
    build:
      context: $PWD/nginx
    restart: always
    command: [nginx-debug, '-g', 'daemon off;']
    ports:
      - "8089:80"
    depends_on:
      - java-microservicio
    networks:
      - netlbfront
  web-ui:
    image: nginx-web-ui
    build:
      context: $PWD/frontend-ui
    restart: always
    command: [nginx-debug, '-g', 'daemon off;']
    ports:
      - "8090:80"
  portainer-monitor:
    image: portainer/portainer:1.22.2
    restart: always
    ports:
      - "9000:9000"
      - "8000:8000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data portainer/portainer
networks:
  netlbfront:
  netmsbackend:
volumes:
  portainer_data:
